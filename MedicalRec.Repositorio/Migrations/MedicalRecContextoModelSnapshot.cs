// <auto-generated />
using System;
using MedicalRec.Repositorio.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalRec.Repositorio.Migrations
{
    [DbContext(typeof(MedicalRecContexto))]
    partial class MedicalRecContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MedicalRec.Dominio.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .HasMaxLength(50);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("00000-000");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50);

                    b.Property<string>("Estado")
                        .HasMaxLength(20);

                    b.Property<string>("Logradouro")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("MedicalRec.Dominio.Entidades.Especialidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MedicoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("MedicalRec.Dominio.Entidades.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CRM")
                        .HasColumnType("00.000.00")
                        .HasMaxLength(9);

                    b.Property<int>("EnderecoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("TelCel")
                        .HasMaxLength(20);

                    b.Property<string>("TelFixo")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("MedicalRec.Dominio.Entidades.Especialidade", b =>
                {
                    b.HasOne("MedicalRec.Dominio.Entidades.Medico")
                        .WithMany("Especialidades")
                        .HasForeignKey("MedicoId");
                });
#pragma warning restore 612, 618
        }
    }
}
